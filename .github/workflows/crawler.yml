name: Hot News Crawler

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  crawl:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Debug file structure
        run: |
          echo "=== 调试文件结构 ==="
          echo "当前工作目录:"
          pwd
          echo ""
          echo "根目录文件列表:"
          ls -la
          echo ""
          echo "config 目录内容:"
          ls -la config/
          echo ""
          echo "检查文件是否存在:"
          [ -f "config/config.yaml" ] && echo "✅ config.yaml 存在" || echo "❌ config.yaml 不存在"
          [ -f "config/frequency_words.txt" ] && echo "✅ frequency_words.txt 存在" || echo "❌ frequency_words.txt 不存在"
          echo ""
          echo "文件内容预览:"
          echo "--- config.yaml 前5行 ---"
          head -5 config/config.yaml || echo "无法读取 config.yaml"
          echo "--- frequency_words.txt 前5行 ---" 
          head -5 config/frequency_words.txt || echo "无法读取 frequency_words.txt"
      
      # ↓↓↓ 只保留一个 Verify required files 步骤 ↓↓↓
      - name: Verify required files
        run: |
          echo "🔍 检查必需的配置文件..."
          if [ ! -f "config/config.yaml" ]; then
            echo "❌ 错误: config/config.yaml 文件不存在"
            exit 1
          fi
          if [ ! -f "config/frequency_words.txt" ]; then
            echo "❌ 错误: config/frequency_words.txt 文件不存在"
            exit 1
          fi
          echo "✅ 配置文件检查通过"

      - name: Run crawler
        env:
          DINGTALK_WEBHOOK_URL: ${{ secrets.DINGTALK_WEBHOOK_URL }}
          GITHUB_ACTIONS: "true"
        run: python main.py

      - name: Commit and push if changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add -A
          git diff --quiet && git diff --staged --quiet || (git commit -m "Auto update by GitHub Actions at $(TZ=Asia/Shanghai date)" && git push)
